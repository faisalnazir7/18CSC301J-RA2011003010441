<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0209.1653                               -->
<workbook include-phone-layouts='false' original-version='18.1' source-build='2022.4.1 (20224.23.0209.1653)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IncludePhoneLayoutsOptOut />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples?rev=1.3' id='Chapter2Examples' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='all_result' inline='true' name='federated.0h3ay5j07wou4u18jwcfn15sc1gt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_result' name='textscan.0dg555u0homvfa1bcyw3i1u5m01n'>
            <connection class='textscan' directory='/Users/user/Downloads' filename='Elections_dataset.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0dg555u0homvfa1bcyw3i1u5m01n' name='all_result.csv' table='[all_result#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='Constituency Name' ordinal='1' />
            <column datatype='string' name='Candidate' ordinal='2' />
            <column datatype='string' name='Party' ordinal='3' />
            <column datatype='integer' name='Votes Margin' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0dg555u0homvfa1bcyw3i1u5m01n' name='all_result.csv' table='[all_result#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='Constituency Name' ordinal='1' />
            <column datatype='string' name='Candidate' ordinal='2' />
            <column datatype='string' name='Party' ordinal='3' />
            <column datatype='integer' name='Votes Margin' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Constituency Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Constituency Name]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>Constituency Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Candidate]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>Candidate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Party]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>Party</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Votes Margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Votes Margin]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>Votes Margin</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[all_result.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='integer' name='[Calculation_1731563715761754115]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([Votes Margin])' />
      </column>
      <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Votes Margin]' derivation='Avg' name='[avg:Votes Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Votes Margin]' derivation='Sum' name='[cum:sum:Votes Margin:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Votes Margin]' derivation='Max' name='[max:Votes Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Votes Margin]' derivation='Min' name='[min:Votes Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/Users/gurukrupa/Sharada/Git/DataVisualizationAndStorytellingBook-main/Workbooks/Chapter2_ElectionData.twb Files/Data/tableau-temp 1/#TableauTemp_1mppj4i1aw2e6a1cm3g2m1gbpyne.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/12/2020 03:30:06 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>all_result.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Constituency Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Constituency Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Constituency Name</remote-alias>
              <ordinal>1</ordinal>
              <family>all_result.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>545</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Candidate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Candidate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Candidate</remote-alias>
              <ordinal>2</ordinal>
              <family>all_result.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>971</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Party</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Party]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Party</remote-alias>
              <ordinal>3</ordinal>
              <family>all_result.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Votes Margin</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Votes Margin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Votes Margin</remote-alias>
              <ordinal>4</ordinal>
              <family>all_result.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1041</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>5</ordinal>
              <family>all_result.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[usr:Calculation_1731563715680059394:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[avg:Votes Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[cum:sum:Votes Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[max:Votes Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[min:Votes Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Constituency Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aligarh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ballia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bardhaman Purba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bardoli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bharatpur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Buldhana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dhenkanal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eluru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gaya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gonda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hoshangabad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hoshiarpur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kanthi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Karur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kokrajhar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kota&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madurai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mahbubnagar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nandyal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nawada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nellore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Raipur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajampet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shirdi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tiruvannamalai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vidisha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adilabad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alipurduars&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ambala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amritsar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amroha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Araria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aska&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Autonomous District&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Azamgarh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bastar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgaum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chandni Chowk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chhindwara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Davanagere&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghatal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gwalior&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hathras&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kanniyakumari&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khagaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mandya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mumbai-North-West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Goa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ratnagiri-Sindhudurg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serampore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitamarhi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitapur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sundargarh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theni&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Unnao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ahmednagar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Balurghat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Banswara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baramulla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Begusarai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhadrak&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chikkodi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dhar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faizabad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fatehgarh Sahib&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gauhati&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hindupur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hisar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jalpaiguri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kairana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kanker&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Karimnagar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Machilipatnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maharajganj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nanded&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North West Delhi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rae Bareli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sangli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solapur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Surat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tirunelveli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vaishali&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Gurgaon&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North East Delhi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alwar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Banda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bhilwara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Birbhum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chhota Udaipur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Churu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Etawah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Firozabad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hajipur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kancheepuram&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kandhamal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kurnool&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldaha Dakshin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Misrikh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nagaur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nalgonda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nowgong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patiala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pilibhit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Purnia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salempur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sikar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tumkur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Visakhapatnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anantapur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Araku&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bardhaman-Durgapur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bareilly&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bharuch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chittorgarh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erode&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fatehpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gaya (Sc)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jagatsinghpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jalandhar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jalaun&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamshedpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kolkata Dakshin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Krishnagiri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lakhimpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malkajgiri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meerut&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paschim Champaran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Perambalur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajgarh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajnandgaon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shirur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tonk-Sawai Madhopur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vijayawada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ajmer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amreli&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahraich&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bangaon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Betul&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhagalpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhubaneswar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chitradurga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dharmapuri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ferozpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giridih&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hingoli&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jangipur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jorhat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kaiserganj&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Khammam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Koppal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Munger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Muzaffarnagar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Raichur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sant Kabir Nagar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shillong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Surendranagar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tirupati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Valmiki Nagar&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sirsa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangalore South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Beed&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chennai North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Diamond Harbour&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dumka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gautam Buddha Nagar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hardwar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jhunjhunu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karakat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mandla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mumbai-North-Central&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Navsari&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palamu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puri&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raiganj&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sasaram (Sc)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Satara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ujjain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Warangal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Agra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ahmedabad East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anandpur Sahib&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arambagh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arrah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Badaun&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Balasore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barpeta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bellary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhongir&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bilaspur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dadar &amp; Nagar Haveli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ghaziabad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hatkanangle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hooghly&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kishanganj&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kolar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mumbai-South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Porbandar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raver&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sivaganga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Siwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Srerampur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thoothukkudi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uttara Kannada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amethi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangalore North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Basti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cooch Behar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuddalore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Damoh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garhwal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hamirpur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamui (Sc)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jhansi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kheri&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kurukshetra&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mahesana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayurbhanj&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moradabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Murshidabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Narsapuram&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Osmanabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ramtek&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Secunderabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sriperumbudur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tenkasi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Udupi Chikmagalur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Delhi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Akbarpur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Balaghat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bankura&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bhadohi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolangir&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buxar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chittoor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dharwad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Firozpur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Godda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jhargram&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kakinada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kaliabor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kaushambi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mahabubabad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mahasamund&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maval&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muzaffarpur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nandurbar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Raigad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sagar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shimla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tiruppur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vadodara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Varanasi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Amalapuram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangalore Central&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bhind&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bishnupur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coimbatore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dahod&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dindigul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gadchiroli-Chimur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hajipur (Sc)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Inner Manipur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jaunpur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kachchh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kendrapara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khandwa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mainpuri&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maldaha Uttar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nagina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nizamabad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pollachi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Purvi Champaran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rajsamand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sangrur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Silchar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sonipat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Srikakulam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tura&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vizianagaram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anantnag&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arunachal East&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhiwandi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bolpur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chandrapur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dindori&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gandhinagar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gulbarga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jabalpur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jahanabad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jhalawar-Baran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Keonjhar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Khargone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kheda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mathurapur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peddapalle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pratapgarh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ramanathapuram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samastipur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Srinagar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tezpur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Udaipur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amravati&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangalore Rural&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chennai Central&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darjeeling&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Domariyaganj&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hardoi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jhanjharpur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Junagadh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kannauj&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Khunti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mandi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mehsana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nabarangpur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nashik&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Outer Manipur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Purulia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sambhal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sasaram&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Secundrabad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sultanpur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Udhampur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yavatmal-Washim&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aonla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bansgaon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bidar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chennai South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dausa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dum Dum&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guntur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hassan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jodhpur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Katihar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kodarma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mandsaur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mumbai-North-East&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palghar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panchmahal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ranaghat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ratlam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sambalpur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Satna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sheohar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thanjavur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zahirabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allahabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barabanki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barrackpore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bijnor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chamarajanagar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dhule&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faridabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fatehpur Sikri&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gopalganj&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jajpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jalgaon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kallakurichi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Khadoor Sahib&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kolkata Uttar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lucknow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mangaldoi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mumbai-North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nagapattinam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Delhi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nilgiris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pataliputra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sarguja&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shravasti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tripura East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Viluppuram&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Karnal&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South Delhi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Akola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Banaskantha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bapatla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barasat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bhandara-Gondiya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulandshahr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuttack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Darbhanga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dhaurahra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Farrukhabad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gurdaspur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jaipur Rural&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jammu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Joynagar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Karimganj&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lohardaga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mahabubnagar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mayiladuthurai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mysore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nalanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Raigarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajahmundry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saharanpur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shimoga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tiruvallur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Valsad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vellore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anakapalli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asansol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aurangabad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bagalkot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bargarh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bathinda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhiwani-Mahendragarh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bijapur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chelvella&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chidambaram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dewas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dhubri&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Durg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Delhi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ghazipur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haveri&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Howrah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Karauli-Dholpur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kolhapur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madhepura&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mathura&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mumbai-South-Central&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parbhani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rewa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shahdol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Goa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Supaul&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tamluk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tikamgarh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ambedkar Nagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arunachal West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bikaner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burdwan - Durgapur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chatra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dakshina Kannada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ganganagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jalore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamnagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamui&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kangra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Koraput&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kushi Nagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kutch&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Medinipur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mohanlalganj&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nainital-Udhamsingh Nagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ongole&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peddapalli&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rampur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samastipur (Sc)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Singhbhum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tehri Garhwal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wardha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Almora&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arani&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barmer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Basirhat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bhavnagar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chandauli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Etah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gopalganj (Sc)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gorakhpur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jalna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kalahandi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kalyan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Khajuraho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Krishnanagar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ludhiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mirzapur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nagarkurnool&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Narasaraopet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nawgong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Patna Sahib&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phulpur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rajmahal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sidhi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Surguja&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tripura West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Virudhunagar&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Rohtak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ahmedabad West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arakkonam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baghpat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baharampur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Banka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baramati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berhampur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chikkaballapur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dhanbad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dibrugarh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faridkot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghosi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hazaribagh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jadavpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Janjgir-Champa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kadapa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lalganj&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Machhlishahr&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madhubani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namakkal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robertsganj&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sabarkantha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shahjahanpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tiruchirappalli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ujiarpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uluberia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.0dg555u0homvfa1bcyw3i1u5m01n' name='all_result.csv' table='[all_result#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Constituency Name' ordinal='1' />
                  <column datatype='string' name='Candidate' ordinal='2' />
                  <column datatype='string' name='Party' ordinal='3' />
                  <column datatype='integer' name='Votes Margin' ordinal='4' />
                  <column datatype='integer' name='Year' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Results1999To2019' inline='true' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Elections_dataset' name='textscan.161zba51384m1r1fkxxmj0y6andi'>
            <connection class='textscan' directory='/Users/user/Downloads' filename='Elections_dataset.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.161zba51384m1r1fkxxmj0y6andi' name='Elections_dataset.csv' table='[Elections_dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='Constituency Name' ordinal='1' />
            <column datatype='string' name='Candidate' ordinal='2' />
            <column datatype='string' name='Party' ordinal='3' />
            <column datatype='integer' name='Votes Margin' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.161zba51384m1r1fkxxmj0y6andi' name='Elections_dataset.csv' table='[Elections_dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='Constituency Name' ordinal='1' />
            <column datatype='string' name='Candidate' ordinal='2' />
            <column datatype='string' name='Party' ordinal='3' />
            <column datatype='integer' name='Votes Margin' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Constituency Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Constituency Name]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>Constituency Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Candidate]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>Candidate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Party]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>Party</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Votes Margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Votes Margin]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>Votes Margin</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Elections_dataset.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Candidate]' role='dimension' type='nominal' />
      <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State`' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Elections_dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]' role='measure' type='quantitative' />
      <column-instance column='[Candidate]' derivation='None' name='[none:Candidate:nk]' pivot='key' type='nominal' />
      <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/Users/user/Documents/My Tableau Repository/Datasources/#TableauTemp_17dmdbe08md3q41dv53yc13n13w0.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/27/2023 07:33:24 AM' username=''>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Results1999To2019' increment-value='%null%' refresh-type='create' rows-inserted='2673' timestamp-start='2023-02-27 07:33:24.485' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Constituency Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Constituency Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Constituency Name</remote-alias>
              <ordinal>1</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>715</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Candidate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Candidate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Candidate</remote-alias>
              <ordinal>2</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1652</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Party</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Party]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Party</remote-alias>
              <ordinal>3</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>63</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Votes Margin</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Votes Margin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Votes Margin</remote-alias>
              <ordinal>4</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2551</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>5</ordinal>
              <family>Elections_dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Constituency Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chennai South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Perambalur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tiruppattur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ambala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madras South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hisar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nagercoil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tiruchendur&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Gurgaon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuddalore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gobichettipalayam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ramanathapuram&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vandavasi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chidambaram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Periyakulam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tiruppur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chengalpattu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namakkal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tiruchengode&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sirsa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madras Central&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tenkasi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arakkonam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madurai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thiruvallur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kurukshetra&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sivakasi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chennai Central&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nilgiris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tiruchirappalli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kallakurichi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rasipuram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sonipat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vellore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dharmapuri&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kancheepuram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Viluppuram&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Krishnagiri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sriperumbudur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madras North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thanjavur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dindigul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faridabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pollachi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tiruvallur&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Karnal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chennai North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palani&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tirunelveli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhiwani-Mahendragarh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mayiladuthurai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thoothukkudi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kanniyakumari&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sivaganga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virudhunagar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coimbatore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Erode&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pudukkottai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tiruvannamalai&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Rohtak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nagapattinam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tindivanam&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Candidate:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adhikari Deepak (Dev)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anju Bala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ashok Kumar.K&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bhagwant Mann&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C.S.Puttaraju&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Col. Sona Ram&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dinesh Trivedi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dr. Sanjay Jaiswal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gandhi Dilipkumar Mansukhlal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harish Chandra Meena&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jhina Hikaka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kamlesh Paswan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Krishna Pratap (K.P.)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maganti Venkateswara Rao (Babu)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mohammed Faizal P.P.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Neiphiu Rio&#9;NPF&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pinaki Misra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;R. Dhruvanarayana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajesh Kumar Diwaker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ramcharan Bohara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rekha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Satabdi Roy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sidhant Mohapatra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sushil Kumar Singh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uma Saren&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vinod Kumar Boinapally&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;(Dr.) Sanjeev Kumar Balyan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Akshay Yadav&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arjunlal Meena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Badaruddoza Khan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Birendra Kumar Chaudhary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chavan Harishchandra Deoram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dharambir S/O Bhale Ram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dr. Jitendra Singh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fatepara Devajibhai Govindbhai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;H.D. Devegowda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jai Prakash Narayan Yadav&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kalvakuntla Kavitha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kiren Rijiju&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ladu Kishore Swain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maragatham K&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nagendra Singh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pannerselvam.V&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pratima Mondal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rahul Ramesh Shewale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ram Kumar Sharma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ranjeet Ranjan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sanjaykaka Patil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sharad Tripathi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sukhbir Singh Jaunapuria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thangso Baite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vichare Rajan Baburao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Abhishek Banerjee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anantkumar Hegde&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arvind Sawant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Balabhadra Majhi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Butta Renuka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chirag Kumar Paswan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dileepsingh Bhuria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dr. Mriganka Mahato&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gadkari Nitin Jairam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harinarayan Rajbhar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jasvantsinh Sumanbhai Bhabhor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kamalbhan Singh Marabi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Konakalla Narayana Rao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laxmi Narayan Yadav&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meenakashi Lekhi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Naramalli Sivaprasad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Parvesh Sahib Singh Verma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prof. Azmeera Seetaram Naik&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rajeev Shankarrao Satav&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rama Chandra Hansdah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ravindra Kr. Ray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santosh Kumar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shobha Karandlaje&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sundaram P.R&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uday Pratap Singh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vikram Dev Usendi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adityanath&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anupriya Singh Patel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ashwini Kumar Choubey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bharat Singh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandra Prakash Joshi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dalpat Singh Paraste&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dr. Banshilal Mahto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dr. Virendra Kumar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Godam Nagesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hukm Deo Narayan Yadav&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jyoti Dhurve&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Karadi Sanganna Amarappa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kulamani Samal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mallikarjun Kharge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mulayam Singh Yadav&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nishikant Dubey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prabakaran.K.R.P&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Radadiya Vithalbhai Hansrajbhai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rajiv Pratap Rudy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ramesh Bidhuri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rodmal Nagar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saugata Roy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sreemati Dev Varma (Moon Moon Sen)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamradhwaj Sahu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanaroja R&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vishnu Dayal Ram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adhikari Sisir Kumar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anoop Mishra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ashok Mahadeorao Nete&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bhagwanth Khuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Captain Amarinder Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D K Suresh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dr Mahendra Nath Pandey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dr. Satya Pal Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ganesh Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harsimrat Kaur Badal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jitendera Choudhury&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kanwar Singh Tanwar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Krishna Raj&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maheish Girri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mohite Patil Vijaysinh Shankarrao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nihalchand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ponguleti Srinivasa Reddy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;R. Radhakrishnan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajesh Pandey Urf Guddu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ramdas Chandrabhanji Tadas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Renuka Sinha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Satish Chandra Dubey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Siraj Uddin Ajmal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sushma Swaraj&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Upendra Kushwaha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vinod Kumar Sonkar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Abhishek Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anbumani Ramadoss&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asaduddin Owaisi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Balka Suman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C R Choudhary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Choudhary Mahboob Ali Kaiser&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dilip Patel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dr. Nepal Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gaikwad Ravindra Vishwanath&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harinder Singh Khalsa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jayadev Galla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kamaraj. K&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Konda Vishweshwar Reddy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liladharbhai Khodaji Vaghela&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mehbooba Mufti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Narendra Modi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pashupati Nath Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prof. Chintamani Malviya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rajen Gohain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rama Devi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ravindra Kumar Pandey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santosh Kumar Gangwar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shrimant Chh. Udayanraje Pratapsinha Bhonsale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunil Kumar Mondal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Udhaya Kumar .M&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vinayak Bhaurao Raut&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ajay Nishad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arjun Charan Sethi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Babul Supriya Baral (Babul Supriyo)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bijoya Chakravarty&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chauhan Devusinh Jesingbhai (Chauhan Devusinh)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Devji Patel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dr. Harsh Vardhan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dushyant Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gourav Gogoi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jadhav Sanjay (Bandu) Haribhau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalraj Mishra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khadase Raksha Nikhil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwar Harivansh Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manoj Tiwari&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nagarajan, P.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;P.V.Midhun Reddy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prasun Banerjee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rahul Gandhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ram Charitra Nishad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ramsinh Rathwa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sambasiva Rao Rayapati&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shanta Kumar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudip Bandyopadhyay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tathagata Satpathy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venkatesh Babu .T.G&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;(Maj Gen (Retd.) ) Bhuwan Chandra Khanduri (Avsm)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alok Sanjar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arka Keshari Deo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Badruddin Ajmal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bishnu Pada Ray&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chavda Vinod Lakhamashi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dharmendra Kumar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dr. K.C.Patel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Feroze Varun Gandhi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hari Manjhi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Janak Ram&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kalyan Banerjee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kirit Somaiya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lakhan Lal Sahu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marutharajaa, R.P.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nalin Kumar Kateel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Parasuraman.K&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prem Das Rai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raj Kumar Saini&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ram Prasad Sarmah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ranjit Singh Brahmpura&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sankar Prasad Datta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shatrughana Sinha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sultan Ahmed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thota Narasimham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vijay Kumar Hansdak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ahir Hansraj Gangaram&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aparupa Poddar (Afrin Ali)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B.N.Chandrappa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bidyut Baran Mahato&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charanjeet Singh Rori&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deepender Singh Hooda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dr. Boora Narsaiah Goud&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dr.Shrikant Eknath Shinde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gopal. Dr. K&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;J.C. Divakar Reddi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kadiyam Srihari&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Keshav Prasad Maurya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kunwar Pushpendra Singh Chandel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manoj Rajoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Muzaffar Hussain Baig&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;P P Choudhary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pralhad Joshi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Radheshyam Biswas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rakesh Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rameswar Teli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sadhvi Savitri Bai Foole&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senthilnathan Pr&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudarshan Bhagat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tariq Hameed Karra&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vasava Parbhubhai Nagarbhai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yashwant Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Abu Hasem Khan Chowdhury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angadi Suresh Channabasappa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ashok Gajapathi Raju Pusapati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bandaru Dattatreya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;C. L. RUALA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Choudhury Mohan Jatua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dimple Yadav&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dr. Ram Shankar Katheria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gajanan Chandrakant Kirtikar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hariom Singh Rathore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jayant Sinha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kambhampati Hari Babu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kothapalli Geetha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lokhande Sadashiv Kisan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mekapati Rajamohan Reddy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Narendra Singh Tomar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Patel Jayshreeben Kanubhai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prof. Sadhu Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rajendra Agarwal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rama Kishore Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ravindra Kushawaha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sanwar Lal Jat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shripad Yesso Naik&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunil Kumar Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Udit Raj&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vincent H. Pala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adsul Anandrao Vithoba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anurag Singh Thakur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B. S. Yeddyurappa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bharathi Mohan R.K&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chandrakant Bhaurao Khaire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danve Raosaheb Dadarao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dr. Bhagirath Prasad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dr.Gavit Heena Vaijaykumar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Godse Hemant Tukaram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hukum Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jyotiraditya M Scindia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Karia Munda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kumar.P&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malyadri Sriram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Munde Gopinathrao Pandurang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nityanand Rai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prabhas Kumar Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Radha Mohan Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raju Shetty&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ramesh Chander&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S.P.Y Reddy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Savitri Thakur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Subhash Baheria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tapas Mandal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Varaprasad Rao Velagapalli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vishnu Deo Sai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adv. Chintaman Navasha Wanga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anwhar Raajhaa.A&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B. Sreeramulu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhartruhari Mahatab&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chandrakasi, M&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Darshana Vikram Jardosh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dr. Bhamre Subhash Ramrao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dr.Mahesh Sharma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gokaraju Ganga Raju&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Idris Ali&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;K.H.Muniyappa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kaushal Kishore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kundariya Mohanbhai Kalyanjibhai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maneka Sanjay Gandhi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Murali Mohan Maganti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Om Birla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prahalad Singh Patel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Radhakrishnan P.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rajveer Singh (Raju Bhaiya)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ramesh Jigajinagi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S.R. Vijayakumar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Selvakumara Chinnayan S&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Subhash Patel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tapas Paul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vasanthi.M&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Y.S. Avinash Reddy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ajay Kumar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Appa Alias Shrirang Chandu Barne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B.V.Nayak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bijoy Chandra Barman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chaudhary Haribhai Parthibhai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Devendra Singh (Bhole Singh)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dr. Dharam Vira Gandhi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dushyant Chautala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gopalakrishnan, C.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jadhav Prataprao Ganpatrao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalikesh Narayan Singh Deo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kesineni Srinivas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kunwer Sarvesh Kumar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manoj Sinha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Naba Kumar Sarania (Hira)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;P.C. Mohan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prasanna Kumar Patasani&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raghav Lakhanpal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ram Chandra Paswan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rammohan Naidu Kinjarapu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sakuntala Laguri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shailesh Kumar Urph Bulo Mandal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudhir Gupta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tasleem Uddin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Veena Devi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yellaiah Nandi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ajay Tamta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arjun Ram Meghwal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Babulal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Biren Singh Engti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chauhan Prabhatsinh Pratapsinh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dhananjay Bhimrao Mahadik&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dr. J. Jayavardhan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Faggan Singh Kulaste&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gutha Sukhender Reddy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jagdambika Pal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kalvakuntla Chandrasekhar Rao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Khan Saumitra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;L.K.Advani&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manshankar Ninama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nagendra Kumar Pradhan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pankaj&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prathap Simha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rahul Kaswan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ram Kripal Yadav&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ramvilas Paswan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sandhya Roy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sharad Bansode&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sugata Bose&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thambidurai,M.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venugopal.P.(Dr)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adhikari Suvendu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anshul Verma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ashok Shankarrao Chavan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhairon Prasad Mishra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ch.Malla Reddy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;D.V Sadananda Gowda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dr Pandula Ravindra Babu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dr. Sunil Baliram Gaikwad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gawali Bhavana Pundlikrao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hema Malini&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jual (Juel Oram)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kapil Krishna Thakur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kristappa Nimmala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mahendran.C&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muddahanumegowda.S.P.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ninong Ering&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poonam Mahajan Alias Poonam Vajendla Rao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R.Gopalakrishnan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajesh Ranjan (Pappu Yadav)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ramen Deka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rita Tarai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Satish Kumar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Smt. Kirron Kher&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sushmita Dev&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;V.Elumalai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virender Kashyap&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adhalrao Shivaji Dattatrey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anil Shirole&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ashok Kumar Doharey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bhagat Singh Koshyari&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;C. R. Patil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chudasama Rajeshbhai Naranbhai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dinesh Kashyap&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dr. Ratna De (Nag)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gajendrasingh Shekhawat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harish Chandra Alias Harish Dwivedi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jeyasingh Thiyagaraj Natterjee.J&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kamla Patle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Krishan Pal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;M Veerappa Moily&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mohammad Asrarul Haque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Neelam Sonkar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patel Natubhai Gomanbhai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Purno Agitok Sangma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajendran S&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ramachandran, K.N. Thiru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ravneet Singh Bittu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sarbananda Sonowal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shyama Charan Gupta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Supriya Sule&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uma Bharati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vinod Khanna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A.T. Nana Patil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anant Geete&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arpita Ghosh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bahadur Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bodhsingh Bhagat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chhedi Paswan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dharmendra Yadav&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dr. Kakali Ghoshdostidar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;G M Siddeshwara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hari Om Pandey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Janardan Mishra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kamakhya Prasad Tasa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kirti Azad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lallu Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mausam Noor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nanabhau Falgunrao Patole&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paresh Rawal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prem Singh Chandumajra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raj Kumar Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ram Swaroop Sharma&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rathod Dipsinh Shankarsinh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santokh Singh Chaudhary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sher Singh Ghubaya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sumedhanand Saraswati&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thupstan Chhewang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vijay Kumar Singh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adv. Narendra Keshav Sawaikar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ap Jithender Reddy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B.B. Patil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhola Singh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chandu Lal Sahu (Chandu Bhaiya)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dasrath Tirkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dr. Bharatiben Dhirubhai Shiyal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dr.Murli Manohar Joshi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gopal Chinayya Shetty&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Inderjit Singh Rao&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kachhadiya Naranbhai Bhikhabhai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kaushlendra Kumar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kunwar Bhartendra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manohar Untwal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Muttamsetti Srinivasa Rao (Avanthi)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Om Prakash Yadav&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prakash Babanna Hukkeri&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Radhakrishnan T&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rajyavardhan Singh Rathore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ramesh Pokhriyal Nishank&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S.S.Ahluwalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senguttuvan, B.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Subrata Bakshi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tariq Anwar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vasava Mansukhbhai Dhanjibhai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Y.V.Subba Reddy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adhir Ranjan Chowdhury&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anupam Hazra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ashwini Kumar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bhanu Pratap Singh Verma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chand Nath&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Daddan Mishra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dr. Arun Kumar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dr. Thokchom Meinya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Giriraj Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hemendra Chandra Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jugal Kishore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kapil Moreshwar Patil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Krupal Balaji Tumane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mala Rajya Laxmi Shah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mukesh Rajput&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niranjan Jyoti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poonamben Hematbhai Maadam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rabindra Kumar Jena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rajesh Verma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ramesh Bais&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riti Pathak&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Satyapal Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sonia Gandhi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swami Sachchidanand Hari Sakshi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;V.Sathyabama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Virendra Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abhijit Mukherjee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ananth Kumar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arunmozhithevan.A&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baijayant Panda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brij Bhusan Sharan Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chhotelal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dhotre Sanjay Shamrao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dr. Mamtaz Sanghamita&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gaddigoudar Parvtagouda Chandanagouda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hari, G.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Janardan Singh (Sigriwal)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kamal Nath&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kirti Vardhan Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laxman Giluwa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Md. Salim&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nandkumar Singh Chouhan (Nandu Bhaiya)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parthipan, R.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Priyanka Singh Rawat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Raj Nath Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ram Tahal Choudhary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rattan Lal Kataria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santosh Ahlawat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shibu Soren&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sumitra Mahajan (Tai)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Udasi Shivakumar Channabasappa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vijay Sampla&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Elections_dataset.csv' id='Elections_dataset.csv_F90372E2B5054DAE9ED66EF03C6FECEA'>
            <properties context=''>
              <relation connection='textscan.161zba51384m1r1fkxxmj0y6andi' name='Elections_dataset.csv' table='[Elections_dataset#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Constituency Name' ordinal='1' />
                  <column datatype='string' name='Candidate' ordinal='2' />
                  <column datatype='string' name='Party' ordinal='3' />
                  <column datatype='integer' name='Votes Margin' ordinal='4' />
                  <column datatype='integer' name='Year' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='FIGURE 2.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_1?rev=' id='33166941' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Party]' role='dimension' type='nominal' />
            <column caption='State`' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Party]' derivation='None' name='[none:Party:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Tamil Nadu&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>1999</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' />
              <text column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Party:nk]' />
              <text column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]' />
              <color column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Party:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E11D016A-8852-48A0-B3BA-021E914EB8DF}' />
    </worksheet>
    <worksheet name='FIGURE 2.12'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituency
State: Delhi</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Examples_15837744257450/Example6?rev=' id='FIGURE2_16' path='/workbooks/Chapter2Examples_3' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='all_result' name='federated.0h3ay5j07wou4u18jwcfn15sc1gt' />
          </datasources>
          <datasource-dependencies datasource='federated.0h3ay5j07wou4u18jwcfn15sc1gt'>
            <column caption='Calculation1' datatype='integer' name='[Calculation_1731563715761754115]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([Votes Margin])' />
            </column>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1731563715761754115]' derivation='User' name='[usr:Calculation_1731563715761754115:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Delhi&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]</column>
            <column>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[usr:Calculation_1731563715761754115:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[usr:Calculation_1731563715761754115:qk]' />
                <format attr='mark-labels-range-max' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]</rows>
        <cols>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Constituency Name:nk]</cols>
      </table>
      <simple-id uuid='{DB8AA934-318A-4CC7-B21A-73D0A8A52358}' />
    </worksheet>
    <worksheet name='FIGURE 2.13'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'>State: Haryana</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Examples_15837744257450/Example7?rev=' id='FIGURE2_17' path='/workbooks/Chapter2Examples_3' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='all_result' name='federated.0h3ay5j07wou4u18jwcfn15sc1gt' />
          </datasources>
          <datasource-dependencies datasource='federated.0h3ay5j07wou4u18jwcfn15sc1gt'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Haryana&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Constituency Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]</column>
            <column>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Constituency Name:nk]</rows>
        <cols>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]</cols>
      </table>
      <simple-id uuid='{725CA1EC-9B28-4104-AA95-F31705114ACC}' />
    </worksheet>
    <worksheet name='FIGURE 2.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_2?rev=' id='33166942' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column caption='State`' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Tamil Nadu&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</rows>
        <cols>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]</cols>
      </table>
      <simple-id uuid='{4DECD860-E0CE-4A08-96F5-BDA2F7C74F5C}' />
    </worksheet>
    <worksheet name='FIGURE 2.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_3?rev=' id='33166943' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column caption='State`' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Haryana&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</rows>
        <cols>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]</cols>
      </table>
      <simple-id uuid='{DA0B6ECC-57FF-422E-AAB5-661A444C1C1F}' />
    </worksheet>
    <worksheet name='FIGURE 2.5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_5?rev=' id='33166944' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column caption='State`' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;West Bengal&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{4521AC1F-E55D-4D34-BD8B-6CFD4141B0D7}' />
    </worksheet>
    <worksheet name='FIGURE 2.6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_6?rev=' id='33166945' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Candidate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column caption='State`' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Candidate]' derivation='None' name='[none:Candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Baharampur&quot;</bucket>
              <bucket>&quot;Jhargram&quot;</bucket>
              <bucket>&quot;Arambagh&quot;</bucket>
              <bucket>&quot;Ghatal&quot;</bucket>
              <bucket>&quot;Tamluk&quot;</bucket>
              <bucket>&quot;Bolpur&quot;</bucket>
              <bucket>&quot;Kanthi&quot;</bucket>
              <bucket>&quot;Barrackpore&quot;</bucket>
              <bucket>&quot;Ranaghat&quot;</bucket>
              <bucket>&quot;Uluberia&quot;</bucket>
              <bucket>&quot;Darjeeling&quot;</bucket>
              <bucket>&quot;Howrah&quot;</bucket>
              <bucket>&quot;Hooghly&quot;</bucket>
              <bucket>&quot;Medinipur&quot;</bucket>
              <bucket>&quot;Barasat&quot;</bucket>
              <bucket>&quot;Maldaha Dakshin&quot;</bucket>
              <bucket>&quot;Dum Dum&quot;</bucket>
              <bucket>&quot;Purulia&quot;</bucket>
              <bucket>&quot;Serampore&quot;</bucket>
              <bucket>&quot;Bishnupur&quot;</bucket>
              <bucket>&quot;Bangaon&quot;</bucket>
              <bucket>&quot;Mathurapur&quot;</bucket>
              <bucket>&quot;Kolkata Dakshin&quot;</bucket>
              <bucket>&quot;Jadavpur&quot;</bucket>
              <bucket>&quot;Bardhaman Purba&quot;</bucket>
              <bucket>&quot;Basirhat&quot;</bucket>
              <bucket>&quot;Joynagar&quot;</bucket>
              <bucket>&quot;Bardhaman-Durgapur&quot;</bucket>
              <bucket>&quot;Balurghat&quot;</bucket>
              <bucket>&quot;Bankura&quot;</bucket>
              <bucket>&quot;Kolkata Uttar&quot;</bucket>
              <bucket>&quot;Cooch Behar&quot;</bucket>
              <bucket>&quot;Diamond Harbour&quot;</bucket>
              <bucket>&quot;Krishnanagar&quot;</bucket>
              <bucket>&quot;Asansol&quot;</bucket>
              <bucket>&quot;Jalpaiguri&quot;</bucket>
              <bucket>&quot;Birbhum&quot;</bucket>
              <bucket>&quot;Maldaha Uttar&quot;</bucket>
              <bucket>&quot;Alipurduars&quot;</bucket>
              <bucket>&quot;Murshidabad&quot;</bucket>
              <bucket>&quot;Jangipur&quot;</bucket>
              <bucket>&quot;Raiganj&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;West Bengal&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Candidate:nk]' />
              <wedge-size column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' />
              <size column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{FA3C9488-6349-4831-86B2-D9B5918FF253}' />
    </worksheet>
    <worksheet name='FIGURE 2.7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Lok Sabha 2014 - Average votes margin across all states</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_9?rev=' id='33166946' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column caption='State`' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Avg' name='[avg:Votes Margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[avg:Votes Margin:qk]' num-steps='5' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</rows>
        <cols>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[avg:Votes Margin:qk]</cols>
      </table>
      <simple-id uuid='{336A10C1-132D-4151-9DF1-93BA167AA1F1}' />
    </worksheet>
    <worksheet name='FIGURE 2.8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_12?rev=' id='33166947' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Constituency Name]' role='dimension' type='nominal' />
            <column caption='State`' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Constituency Name]' derivation='None' name='[none:Constituency Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Haryana&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{CB0A26AF-BBAE-455B-9A0C-2EF100F98D3D}' />
    </worksheet>
    <worksheet name='FIGURE 2.9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Votes margin by Constituencies&#10;</run>
            <run bold='true'><![CDATA[State: <[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/Chapter2Examples/FIGURE2_13?rev=' id='33166948' path='/workbooks/Chapter2Examples' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
            <column datatype='string' name='[Candidate]' role='dimension' type='nominal' />
            <column caption='State`' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Votes Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Candidate]' derivation='None' name='[none:Candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Margin]' derivation='Sum' name='[sum:Votes Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Haryana&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]' included-values='in-range'>
            <min>2014</min>
            <max>2014</max>
          </filter>
          <slices>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</column>
            <column>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' value='Select State'>
              <formatted-text>
                <run>Select State</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' />
              <text column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' />
              <text column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Candidate:nk]' />
              <color column='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F5161DE9-A96E-41D2-89FD-BC3836FF7EE5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Results1999To2019' name='federated.0o8xxq30r1659613pyvqk0jgd4h7' />
      </datasources>
      <datasource-dependencies datasource='federated.0o8xxq30r1659613pyvqk0jgd4h7'>
        <column caption='State`' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Dadar &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='FIGURE 2.1' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7125' id='6' mode='dropdown' name='FIGURE 2.1' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='294' h='37750' id='7' is-fixed='true' name='FIGURE 2.1' pane-specification-id='0' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Party:nk]' type-v2='color' w='16000' x='83200' y='8125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46625' id='8' name='FIGURE 2.2' w='16000' x='83200' y='45875'>
                <layout-cache cell-count-h='39' minwidth='180' non-cell-size-h='210' type-h='cell' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='dropdown' name='FIGURE 2.2' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type-v2='filter' w='16000' x='83200' y='92500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{2E177A0B-52ED-450C-AA19-2EAEE4DDA4C2}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='FIGURE 2.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='257'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Party:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50F1D9BE-B006-41BE-AB47-3D835F185FE2}' />
    </window>
    <window class='worksheet' name='FIGURE 2.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7FF5B5BA-276B-46EA-9760-40E15838B80F}' />
    </window>
    <window class='worksheet' name='FIGURE 2.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D24D05E-BFF5-49F3-B8C9-01DC31BFFAF6}' />
    </window>
    <window class='worksheet' name='FIGURE 2.5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='211'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{853F4143-236F-4AAA-BADF-6BA70F54A848}' />
    </window>
    <window class='worksheet' name='FIGURE 2.6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='211'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Candidate:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Candidate:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E17497C-9AE5-40D6-9096-FD616E02CB48}' />
    </window>
    <window class='worksheet' name='FIGURE 2.7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[avg:Votes Margin:qk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Candidate:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EB44E2D-982D-4B96-8561-5FF094BEEAEE}' />
    </window>
    <window class='worksheet' name='FIGURE 2.8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42AFFCAE-6556-4CD5-9FD6-523B159C62DD}' />
    </window>
    <window class='worksheet' name='FIGURE 2.9'>
      <cards>
        <edge name='left'>
          <strip size='187'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='140'>
            <card mode='dropdown' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Candidate:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Constituency Name:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:State:nk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Year:qk]</field>
            <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[sum:Votes Margin:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{98B1F994-7C6F-434E-AAB1-A920DA9A8B7A}' />
    </window>
    <window class='worksheet' name='FIGURE 2.12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Constituency Name:nk]</field>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]</field>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]</field>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[sum:Votes Margin:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3A62B1A6-AE5A-4C3F-A56C-4050D1CC1CD8}' />
    </window>
    <window class='worksheet' name='FIGURE 2.13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Constituency Name:nk]</field>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:State:nk]</field>
            <field>[federated.0h3ay5j07wou4u18jwcfn15sc1gt].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CEDA1F92-6A3C-4343-B81B-207E4DFB27F8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='FIGURE 2.1'>
          <highlight>
            <color-one-way>
              <field>[federated.0o8xxq30r1659613pyvqk0jgd4h7].[none:Party:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='FIGURE 2.2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{73DF56F7-AD13-4373-913D-86BDD65CBC82}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.12' width='192'>
      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
      a9cSXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.13' width='192'>
      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
      /we96pJfLoJAeQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.5' width='192'>
      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
      IWgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.7' width='192'>
      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
      0LjbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FIGURE 2.9' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
